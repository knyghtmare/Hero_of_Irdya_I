#textdomain wesnoth-Hero_of_Irdya_I

#define ABILITY_PHYSICAL_ENDURANCE
    [dummy]
        id=physical_endurance
        name= _ "physical endurance"
        description={ABILITY_CAPTION ( _ "Physical Endurance")}+_"Units with this ability instantly regenerate half of the damage dealt to them unless its type is arcane, or the damage amount would kill them otherwise (greater than or equals their remaining HP)."
    [/dummy]
[/abilities]

    [event]
        id=ability_physical_endurance_attacker_hits
        name=attacker hits
        first_time_only=no
        [filter_second]
            ability=physical_endurance
        [/filter_second]
        [filter_attack]
            [not]
                type=arcane
            [/not]
        [/filter_attack]

        [fire_event]
            name=physical endurance handler
            [primary_unit]
                x,y=$x2,$y2
            [/primary_unit]
            [secondary_unit]
                x,y=$x1,$y1
            [/secondary_unit]
        [/fire_event]
    [/event]
    [event]
        id=ability_physical_endurance_defender_hits
        name=defender hits
        first_time_only=no
        [filter]
            ability=physical_endurance
        [/filter]
        [filter_second_attack]
            [not]
                type=arcane
            [/not]
        [/filter_second_attack]

        [fire_event]
            name=physical endurance handler
            [primary_unit]
                x,y=$x1,$y1
            [/primary_unit]
            [secondary_unit]
                x,y=$x2,$y2
            [/secondary_unit]
        [/fire_event]
    [/event]
    [event]
        id=ability_physical_endurance_handler
        name=physical endurance handler
        first_time_only=no

        # Primary unit: physical endurance user
        # Secondary unit: attacker/defender

        [if]
            {VARIABLE_CONDITIONAL unit.hitpoints greater_than 0}
            [then]
                {VARIABLE_OP temp_PHYSICAL_ENDURANCE_restore_hp to_variable damage_inflicted}
                {VARIABLE_OP temp_PHYSICAL_ENDURANCE_restore_hp divide      2}
                {VARIABLE_OP temp_PHYSICAL_ENDURANCE_restore_hp round       ceil}

                [heal_unit]
                    [filter]
                        x,y=$x1,$y1
                    [/filter]
                    amount=$temp_PHYSICAL_ENDURANCE_restore_hp
                [/heal_unit]

                [floating_text]
                    x,y=$x1,$y1
                    text="<span color='green'>$heal_amount</span>" # wmllint: ignore
                [/floating_text]

                {CLEAR_VARIABLE temp_PHYSICAL_ENDURANCE_restore_hp}
            [/then]
        [/if]
    [/event]

[+abilities]
#enddef

#define SPECIAL_NOTES_FLY
    _ " This unit can fly over the terrain and over any impediments such as the snow, chasms and sand..." #enddef

#define SPECIAL_NOTES_PHYSICAL_ENDURANCE
    _ " This unit will instantly regenerate half of the damage deal on it with non-arcane attacks, unless it would otherwise kill it." #enddef

#define SPECIAL_NOTES_STUN
_ " This unit is able to stun its enemies, disrupting their zones of control."#enddef

#define WEAPON_SPECIAL_STUN
    [damage]
        id=stun
        name= _ "stun"
        description= _ "This attack hits so hard that the defender is dazed and can no longer enforce a zone of control. The effect wears off on the defender's next turn."
        multiply=1
    [/damage]
#enddef

#define STUN_ATTACK_EVENT
[event]
    name=attacker_hits
    first_time_only=no

    [filter_attack]
        special=stun
    [/filter_attack]

    [filter_second]
        [not]
            level=0
        [/not]
    [/filter_second]

    [if]
        [variable]
            name=second_unit.variables.stunned
            boolean_equals=no
        [/variable]
        [then]
            {VARIABLE second_unit.variables.stunned yes}

            [if]
                [variable]
                    name=second_unit.gender
                    equals=female
                [/variable]

                [then]
                    [set_variable]
                        name=tmp_stunned_text
                        value= _ "female^stunned"
                    [/set_variable]
                [/then]

                [else]
                    [set_variable]
                        name=tmp_stunned_text
                        value= _ "stunned"
                    [/set_variable]
                [/else]
            [/if]

            [unstore_unit]
                variable=second_unit
                find_vacant=no
                text=$tmp_stunned_text
                red,green,blue=196,196,128
            [/unstore_unit]

            [object]
                silent=yes
                duration=scenario

                [filter]
                    x,y=$x2,$y2
                [/filter]

                [effect]
                    apply_to=image_mod
                    replace="CS(50,50,0)"
                [/effect]

                [effect]
                    apply_to=ellipse
                    ellipse="misc/ellipse-nozoc"
                [/effect]

                [effect]
                    apply_to=zoc
                    value=no
                [/effect]
            [/object]

            [clear_variable]
                name=tmp_stunned_text
            [/clear_variable]
        [/then]
    [/if]
[/event]

[event]
    name=turn refresh
    first_time_only=no

    [store_unit]
        [filter]
            side=$side_number
            [filter_wml]
                [variables]
                    stunned=yes
                [/variables]
            [/filter_wml]
        [/filter]
        variable=stunned
    [/store_unit]

    {FOREACH stunned i}
        {VARIABLE stunned[$i].variables.stunned no}

        [unstore_unit]
            variable=stunned[$i]
        [/unstore_unit]

        [object]
            silent=yes
            duration=scenario

            [filter]
                x,y=$stunned[$i].x,$stunned[$i].y
            [/filter]

            [effect]
                apply_to=image_mod
                replace="NOP()"
            [/effect]

            [effect]
                apply_to=ellipse
                ellipse="misc/ellipse"
            [/effect]

            [effect]
                apply_to=zoc
                value=yes
            [/effect]
        [/object]
    {NEXT i}

    {CLEAR_VARIABLE stunned}
[/event]
#enddef

#define WEAPON_SPECIAL_CLEAVE
    [damage]
      id=cleave
      name= _ "cleave"
      description={WEAPON_SPECIAL_CAPTION ( _ "Cleave")}+ _ "On a melee attack, whatever hits the target will also hit enemies in the two hexes that are adjacent to both the attacker and defender, in a crescent moon shape, for 50% of the original damage."
    [/damage]
#enddef

#define INCORPORATE_EFFECTS
   {VARIABLE damage $damage_inflicted}
   {VARIABLE_OP damage multiply 100}
   [set_variable]
      name=resistance
      to_variable=second_unit.resistance.$weapon.type
   [/set_variable]
   [if]
      [variable]
          name=resistance
          greater_than=0
      [/variable]
      [else]
         {VARIABLE resistance 100}
      [/else]
   [/if]
   {VARIABLE_OP damage divide $resistance}
   {CLEAR_VARIABLE resistance}
#enddef

#define CLEAVE_ATTACK_EVENT
[event]
   name=attacker_hits
   first_time_only=no
   [filter_attack]
      special=cleave
   [/filter_attack]
   {INCORPORATE_EFFECTS}
   {VARIABLE has_poison no}
   {VARIABLE has_slow no}
   [if]
      [variable]
         name=weapon.specials.poison.id
         equals=poison
      [/variable]
      [then]
         {VARIABLE has_poison yes}

      [/then]
   [/if]
   [if]
      [variable]
         name=weapon.specials.slow.id
         equals=slow
      [/variable]
      [then]
         {VARIABLE has_slow yes}

      [/then]
  [/if]
  [harm_unit]
      [filter]
         [filter_adjacent]
             x,y=$x2,$y2
         [/filter_adjacent]
         [and]
            [filter_adjacent]
                x,y=$x1,$y1
            [/filter_adjacent]
         [/and]
         [filter_side]
            [enemy_of]
                side=1
            [/enemy_of]
         [/filter_side]
      [/filter]
      [filter_second]
         x,y=$x1,$y1
      [/filter_second]
      amount=$($damage/2)
      damage_type=$weapon.type
      poisoned=$has_poison
      slowed=$has_slow
      fire_event=yes
      experience=no
  [/harm_unit] 
  {CLEAR_VARIABLE has_slow}
  {CLEAR_VARIABLE has_poison}
  {CLEAR_VARIABLE damage}
[/event]
#enddef